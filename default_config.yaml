# Builtin Configurations(DO NOT CHANGE THESE CONFIGURATIONS unless you know exactly what you are doing)
enable_modelarts: True
data_url: ""
multi_data_url: ""
train_url: ""
ckpt_url: ""
result_url: ""
data_path: "/home/work/user-job-dir/data/"
output_path: "/home/work/user-job-dir/model/"
load_path: "/home/work/user-job-dir/checkpoint.ckpt"
result_path: "" # "/home/work/user-job-dir/result/"
checkpoint_path: ""
device_target: Ascend
enable_profiling: False
enable_graph_kernel: False # GPU: True, Ascend: False

# ==============================================================================
modelarts_dataset_unzip_name: 'imagenet'
need_modelarts_dataset_unzip: False

architecture: "coatnet_1"

num_classes: 1000
image_height: 224
image_width: 224
center_crop: True
num_parallel_workers: 16
batch_size: 64

rand_augment_num_layers: 2
rand_augment_magnitude: 15
mixup_alpha: 0.8

num_epochs: 300
lr_max: 0.001
lr_min: 0.00001
lr_warmup_epochs: 20
epsilon: 0.000001
weight_decay: 0.05
enable_ema: False
ema_decay: 0.9999
enable_clip_norm: True
gradient_norm: 1.0
label_smoothing: 0.1

# loss_scale: 1024
save_checkpoint: True
save_checkpoint_epochs: 1
keep_checkpoint_max: 50
save_checkpoint_path: "/home/work/user-job-dir/model/"
device_id: 0
rank_id: 0
rank_size: 1
run_distribute: True
run_eval: True
activation: "Softmax"

# Image classification train
dataset_path: ""
pretrain_ckpt: ""
freeze_layer: ""
filter_head: False
enable_cache: False
cache_session_id: ""
is_training: True

# CoAtNet eval
is_training_eval: False
run_distribute_eval: False

# CoAtNet export
device_id_export: 0
batch_size_export: 1
ckpt_file: ""
file_name: "CoAtNet"
file_format: "MINDIR"
is_training_export: False
run_distribute_export: False

# postprocess.py / CoAtNet acc calculation
batch_size_postprocess: 1
# result_path: ''
label_path: ''

---
# Config description for each option
enable_modelarts: 'Whether training on modelarts, default: False'
data_url: 'Dataset url for obs'
train_url: 'Training output url for obs'
data_path: 'Dataset path for local'
output_path: 'Training output path for local'
ann_file: 'Ann file, default is val.json.'

pretrain_ckpt: 'Pretrained checkpoint path for fine tune or incremental learning'
platform: 'Target device type'
freeze_layer: 'freeze the weights of network from start to which layers'
filter_head: 'Filter head weight parameters when load checkpoint, default is False.'
enable_cache: 'Caching the dataset in memory to speedup dataset processing, default is False.'
cache_session_id: 'The session id for cache service.'
file_name: "output file name."
result_path: "result files path."
label_path: "label path."
enable_profiling: 'Whether enable profiling while training, default: False'
run_eval: 'Whether run evaluation while training, default is false.'
run_distribute: 'Run distribute, default is false.'
device_id: 'Device id, default is 0.'
rank_id: 'Rank id, default is 0.'
file_format: 'file format'

---
platform: ['Ascend', 'GPU', 'CPU']
file_format: ["AIR", "ONNX", "MINDIR"]
freeze_layer: ["", "none", "backbone"]
